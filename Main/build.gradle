import java.text.SimpleDateFormat

plugins {
    id 'java'
}

group 'cn.jja8.MyWorld'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}




dependencies {
    implementation fileTree(dir:'libs/implentation',includes:['*jar'])
    compileOnly fileTree(dir:'libs/compileonly',includes:['*jar'])
    testCompileOnly fileTree(dir:'libs/implentation',includes:['*jar'])
    testCompileOnly fileTree(dir:'libs/compileonly',includes:['*jar'])
}

test {
    useJUnitPlatform()
}

jar.doFirst {
    //获取当前时间作为版本号
    SimpleDateFormat formatter = new SimpleDateFormat("yyyy.MM.dd.HHmm")
    //设置版本号
    String 版本 = formatter.format(new Date())+"-test";//"0.03"//
    //替换配置文件版本号
    Iterator<File> 文件列表 = fileTree(dir: "${projectDir}/build/resources/main/", includes: ['*yml']).getFiles().iterator();
    try {
        while (true) {
            File 文件 = 文件列表.next()
            替换文本(文件, '版本号', 版本)
        }
    } catch (NoSuchElementException e) {
        println "yaml版本号替换完成"
    }
}
/**
 用作替换文件中的文本
 */
def static 替换文本(File file, String key, String value) {
    def fileText = file.text
    def regex = '\\$\\{' + key + '\\}'
    fileText = (fileText =~ /${regex}/).replaceAll(value)
    file.write(fileText)
}